//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class GameCompany: APIModel {

    public var casa: CASA?

    public var casaId: Int?

    public var gameCompanyId: Int?

    public var logo: File?

    public var vat: String?

    public init(casa: CASA? = nil, casaId: Int? = nil, gameCompanyId: Int? = nil, logo: File? = nil, vat: String? = nil) {
        self.casa = casa
        self.casaId = casaId
        self.gameCompanyId = gameCompanyId
        self.logo = logo
        self.vat = vat
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        casa = try container.decodeIfPresent("casa")
        casaId = try container.decodeIfPresent("casaId")
        gameCompanyId = try container.decodeIfPresent("gameCompanyId")
        logo = try container.decodeIfPresent("logo")
        vat = try container.decodeIfPresent("vat")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(casa, forKey: "casa")
        try container.encodeIfPresent(casaId, forKey: "casaId")
        try container.encodeIfPresent(gameCompanyId, forKey: "gameCompanyId")
        try container.encodeIfPresent(logo, forKey: "logo")
        try container.encodeIfPresent(vat, forKey: "vat")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? GameCompany else { return false }
      guard self.casa == object.casa else { return false }
      guard self.casaId == object.casaId else { return false }
      guard self.gameCompanyId == object.gameCompanyId else { return false }
      guard self.logo == object.logo else { return false }
      guard self.vat == object.vat else { return false }
      return true
    }

    public static func == (lhs: GameCompany, rhs: GameCompany) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
