//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Game: APIModel {

    public var active: Bool?

    public var gameCompany: GameCompany?

    public var gameCompanyId: Int?

    public var gameId: Int?

    public init(active: Bool? = nil, gameCompany: GameCompany? = nil, gameCompanyId: Int? = nil, gameId: Int? = nil) {
        self.active = active
        self.gameCompany = gameCompany
        self.gameCompanyId = gameCompanyId
        self.gameId = gameId
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        active = try container.decodeIfPresent("active")
        gameCompany = try container.decodeIfPresent("gameCompany")
        gameCompanyId = try container.decodeIfPresent("gameCompanyId")
        gameId = try container.decodeIfPresent("gameId")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(active, forKey: "active")
        try container.encodeIfPresent(gameCompany, forKey: "gameCompany")
        try container.encodeIfPresent(gameCompanyId, forKey: "gameCompanyId")
        try container.encodeIfPresent(gameId, forKey: "gameId")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Game else { return false }
      guard self.active == object.active else { return false }
      guard self.gameCompany == object.gameCompany else { return false }
      guard self.gameCompanyId == object.gameCompanyId else { return false }
      guard self.gameId == object.gameId else { return false }
      return true
    }

    public static func == (lhs: Game, rhs: Game) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
