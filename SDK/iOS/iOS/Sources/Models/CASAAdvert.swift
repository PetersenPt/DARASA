//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CASAAdvert: APIModel {

    public var active: Bool?

    public var casa: CASA?

    public var casaAdvertId: Int?

    public var casaId: Int?

    public var logo: File?

    public init(active: Bool? = nil, casa: CASA? = nil, casaAdvertId: Int? = nil, casaId: Int? = nil, logo: File? = nil) {
        self.active = active
        self.casa = casa
        self.casaAdvertId = casaAdvertId
        self.casaId = casaId
        self.logo = logo
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        active = try container.decodeIfPresent("active")
        casa = try container.decodeIfPresent("casa")
        casaAdvertId = try container.decodeIfPresent("casaAdvertId")
        casaId = try container.decodeIfPresent("casaId")
        logo = try container.decodeIfPresent("logo")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(active, forKey: "active")
        try container.encodeIfPresent(casa, forKey: "casa")
        try container.encodeIfPresent(casaAdvertId, forKey: "casaAdvertId")
        try container.encodeIfPresent(casaId, forKey: "casaId")
        try container.encodeIfPresent(logo, forKey: "logo")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CASAAdvert else { return false }
      guard self.active == object.active else { return false }
      guard self.casa == object.casa else { return false }
      guard self.casaAdvertId == object.casaAdvertId else { return false }
      guard self.casaId == object.casaId else { return false }
      guard self.logo == object.logo else { return false }
      return true
    }

    public static func == (lhs: CASAAdvert, rhs: CASAAdvert) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
